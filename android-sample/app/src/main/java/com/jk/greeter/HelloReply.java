// automatically generated by the FlatBuffers compiler, do not modify

package com.jk.greeter;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class HelloReply extends Table {
  public static HelloReply getRootAsHelloReply(ByteBuffer _bb) { return getRootAsHelloReply(_bb, new HelloReply()); }
  public static HelloReply getRootAsHelloReply(ByteBuffer _bb, HelloReply obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public HelloReply __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean isOK() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int count() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String name() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public long total() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public float distance() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public double price() { int o = __offset(14); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createHelloReply(FlatBufferBuilder builder,
      boolean isOK,
      int count,
      int nameOffset,
      long total,
      float distance,
      double price) {
    builder.startObject(6);
    HelloReply.addPrice(builder, price);
    HelloReply.addTotal(builder, total);
    HelloReply.addDistance(builder, distance);
    HelloReply.addName(builder, nameOffset);
    HelloReply.addCount(builder, count);
    HelloReply.addIsOK(builder, isOK);
    return HelloReply.endHelloReply(builder);
  }

  public static void startHelloReply(FlatBufferBuilder builder) { builder.startObject(6); }
  public static void addIsOK(FlatBufferBuilder builder, boolean isOK) { builder.addBoolean(0, isOK, false); }
  public static void addCount(FlatBufferBuilder builder, int count) { builder.addInt(1, count, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(2, nameOffset, 0); }
  public static void addTotal(FlatBufferBuilder builder, long total) { builder.addLong(3, total, 0L); }
  public static void addDistance(FlatBufferBuilder builder, float distance) { builder.addFloat(4, distance, 0.0f); }
  public static void addPrice(FlatBufferBuilder builder, double price) { builder.addDouble(5, price, 0.0); }
  public static int endHelloReply(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

